Tautology={};Tautology.Canvas=function(a){this.patterns={};this.canvas=new fabric.Canvas(a,{width:2E3,height:2E3});this.makePatterns();fabric.util.addListener(document.getElementsByClassName("upper-canvas")[0],"contextmenu",function(a){a.preventDefault()});$(".canvas-container").ruler({showCrosshair:!1,showMousePos:!1});$("#scrollView").scroll(function(){$(".vRule").css({left:$(this).scrollLeft()});$(".hRule").css({top:$(this).scrollTop()})})};Tautology.Canvas.prototype.constructor=Tautology.Canvas;
Tautology.Canvas.prototype.resize=function(a,b){this.canvas.setWidth(a);this.canvas.setHeight(b);var c=this.canvas.getElement();c.setAttribute("width",a*window.devicePixelRatio);c.setAttribute("height",b*window.devicePixelRatio);c.getContext("2d").scale(window.devicePixelRatio,window.devicePixelRatio);this.canvas.backgroundColor="rgba(255,255,255, 1)";$(".vRule").css({height:b+"px"});this.canvas.renderAll()};
Tautology.Canvas.prototype.resizeWidth=function(a){this.canvas.setWidth(a);var b=this.canvas.getElement();b.setAttribute("width",a*window.devicePixelRatio);b.getContext("2d").scale(window.devicePixelRatio,window.devicePixelRatio)};Tautology.Canvas.prototype.resizeHeight=function(a){this.canvas.setHeight(a);a=this.canvas.getElement();a.setAttribute("width",width*window.devicePixelRatio);a.getContext("2d").scale(window.devicePixelRatio,window.devicePixelRatio)};
Tautology.Canvas.prototype.addImage=function(a){fabric.Image.fromURL(a,function(a){a.height>this.canvas.height&&a.scale(a.height/this.canvas.height*.1);a.on("selected",function(a){console.log(this)});this.canvas.add(a)}.bind(this))};
Tautology.Canvas.prototype.addText=function(a,b,c){var d=b.split(" ");if(0!=a.length){b=a.split("").map(function(a){return new fabric.Text(a,{left:0,top:100,fontFamily:d[0],fontWeight:d[1]})});for(i=1;i<a.length;i++)b[i].left+=b[i-1].left+b[i-1].getWidth()+c;this.canvas.add(new fabric.Group(b,{left:100}))}};
Tautology.Canvas.prototype.makePatterns=function(){for(var a=[],b=0;b<Math.floor($(".canvas-container").width()/50);b++)for(var c=0;c<Math.floor($(".canvas-container").height()/50);c++)a.push(new fabric.Circle({radius:10,fill:"#000",left:50*b,top:50*c})),a.push(new fabric.Circle({radius:10,fill:"#000",left:50*b+25,top:50*c+25}));this.patterns.dots=new fabric.Group(a,{left:0,top:0,label:"pattern",selectable:!1});a=[];for(b=0;b<Math.floor($(".canvas-container").width()/40)+50;b++)a.push(new fabric.Rect({fill:"#000",
width:32,height:1E3,left:80*b-400,top:0,angle:45}));this.patterns.stripes=new fabric.Group(a,{left:-540,top:-140,label:"pattern",selectable:!1})};Tautology.Canvas.prototype.updatePattern=function(a){this.canvas.add(this.patterns[a])};
Tautology.Canvas.prototype.removeSelectedObject=function(){null==this.canvas.getActiveObject()?(this.canvas.getActiveGroup().forEachObject(function(a){this.canvas.remove(a)}),this.canvas.discardActiveGroup().renderAll()):null!=this.canvas.getActiveObject()&&(this.canvas.remove(this.canvas.getActiveObject()),this.canvas.discardActiveObject().renderAll())};Tautology.Canvas.prototype.removeAll=function(){this.canvas.clear()};Tautology.Element=function(a,b){this.index=a;this.object=b};Tautology.Element.prototype.constructor=Tautology.Element;Tautology.Element.prototype.clone=function(a){return new Tautology.Element(this.index.clone(),a.call(this.object))};Tautology.Element.prototype.dispose=function(a){this.index=null;a.call(this.object);this.object=null};Tautology.Element.prototype.applyFunc=function(a){a.call(this)};Tautology.Index=function(a){this.index=a};
Tautology.Index.prototype={constructor:Tautology.Index,clone:function(){return new Tautology.Index(this.index.slice())},set:function(a){this.index=a},prepend:function(a){this.index.unshift(a)},flatten:function(a){this.index=[this.index[0]*a+this.index[1]].concat(this.index.slice(2))},partition:function(a){this.index=[Math.floor(this.index[0]/a),this.index[0]%a].concat(this.index.slice(1))},transpose:function(a){for(var b=[],c=0;c<this.index.length;c++)b.push(this.index[a[c]]);this.index=b},sum:function(a){for(var b=
0,c=0;c<this.index.length-1;c++)b+=this.index[c],b*=a.shape[c+1];return b+=this.index[this.index.length-1]},toLabel:function(){return this.index.toString()}};Tautology.Array=function(){this.elems=[];this.shape=null;this.deepcopy=function(a,b,c){for(var d=a.slice(),e=0;e<d.length;e++)d[e]=a[e].clone(b),void 0!==c&&d[e].index.prepend(c);return d}};Tautology.Array.prototype.constructor=Tautology.Array;Tautology.Array.prototype.init=function(a){this.shape=new Tautology.Shape([a.length]);for(var b=0;b<a.length;b++)this.elems.push(new Tautology.Element(new Tautology.Index([b]),a[b]))};
Tautology.Array.prototype.dup=function(a,b){void 0==b&&(b=THREE.Vector3.prototype.clone);var c=this.deepcopy(this.elems,b);this.elems=[];for(var d=0;d<a;d++)this.elems=this.elems.concat(this.deepcopy(c,b,d));this.shape.prepend(a)};
Tautology.Array.prototype.remove=function(a,b){-1==b&&(b=this.shape.shape[a]-1);console.log(b);for(var c=0;c<this.elems.length;c++)this.elems[c].index.index[a]==b?(console.log(this.elems[c].index.index),delete this.elems[c]):this.elems[c].index.index[a]>b&&this.elems[c].index.index[a]--;this.elems.sort(function(a,b){return a.index.sum(this.shape)-b.index.sum(this.shape)}.bind(this));this.elems.length-=this.elems.length/this.shape.shape[a];this.shape.shape[a]--;console.log(this.elems.length)};
Tautology.Array.prototype.flatten=function(){for(var a=0;a<this.elems.length;a++)this.elems[a].index.flatten(this.shape.shape[1]);this.shape.flatten()};Tautology.Array.prototype.partition=function(a,b){var c=this.elems.length-this.elems.length%a;if(void 0!=b)for(var d=c;d<this.elems.length;d++)this.elems[d].disposeMethod();this.elems.length=c;for(d=0;d<this.elems.length;d++)this.elems[d].index.partition(a);this.shape.partition()};
Tautology.Array.prototype.transpose=function(a){for(var b=this,c=0;c<this.elems.length;c++)this.elems[c].index.transpose(a);this.shape.transpose(a);this.elems.sort(function(a,c){return a.index.sum(b.shape)-c.index.sum(b.shape)})};Tautology.Array.prototype.applyFunc=function(a){for(var b=0;b<this.elems.length;b++)this.elems[b].applyFunc(a)};Tautology.Array.prototype.output=function(){console.log(this.elems.map(function(a){return[a.index.index+" "+a.object]}).join("\n"))};Tautology.Shape=function(a){this.shape=a};Tautology.Shape.prototype={constructor:Tautology.Shape,prepend:function(a){this.shape.unshift(a)},flatten:function(){this.shape=[this.shape[0]*this.shape[1]].concat(this.shape.slice(2))},partition:function(){this.shape=[this.shape[0]/n,n].concat(this.shape.slice(1))},transpose:function(a){for(var b=[],c=0;c<this.shape.length;c++)b.push(this.shape[a[c]]);this.shape=b}};Tautology.MeshGeometry=function(){this.left;this.top;this.width;this.height;this.array;this.geom;this.cols;this.rows;this.vertexTable};
Tautology.MeshGeometry.prototype={constructor:Tautology.MeshGeometry,init:function(a,b,c,d,e){this.left=b;this.top=d;this.width=c;this.height=e;this.array=a;this.geom=new THREE.Geometry;this.cols=this.array.shape.shape[0];this.rows=this.array.shape.shape[1];this.vertexTable={}},initIndex:function(){for(var a=0;a<this.array.elems.length;a++)this.vertexTable[this.array.elems[a].index.toLabel()]={i:a}},distX:function(a,b,c){return a[this.vertexTable[b+","+c].i].object.distanceTo(a[this.vertexTable[b+
","+(c-1)].i].object)},distY:function(a,b,c){return a[this.vertexTable[b+","+c].i].object.distanceTo(a[this.vertexTable[b-1+","+c].i].object)},generate:function(a,b){dX=0!=b&&this.distX(this.array.elems,a,b)||0;dY=0!=a&&this.distY(this.array.elems,a,b)||0;this.vertexTable[a+","+b].x=0!=b&&dX+this.vertexTable[a+","+(b-1)].x||0;this.vertexTable[a+","+b].y=0!=a&&dY+this.vertexTable[a-1+","+b].y||0},generateArray:function(){for(var a=0;a<this.cols;a++)for(var b=0;b<this.rows;b++)this.generate(a,b)},getUnifiedCoordinateArray:function(){for(var a=
0;a<this.cols;a++)for(var b=0;b<this.rows;b++)this.vertexTable[a+","+b].x/=this.vertexTable[a+","+(this.rows-1)].x,void 0!=this.width&&(this.vertexTable[a+","+b].x*=this.width),void 0!=this.left&&(this.vertexTable[a+","+b].x+=this.left),this.vertexTable[a+","+b].y/=this.vertexTable[this.cols-1+","+b].y,void 0!=this.height&&(this.vertexTable[a+","+b].y*=this.height),void 0!=this.top&&(this.vertexTable[a+","+b].x+=this.top)},pushVertices:function(){for(var a=0;a<this.cols;a++)for(var b=0;b<this.rows;b++)this.geom.vertices.push(this.array.elems[this.vertexTable[a+
","+b].i].object)},pushFace:function(a,b,c){this.geom.faces.push(new THREE.Face3(a.i,b.i,c.i));this.geom.faceVertexUvs[0].push([new THREE.Vector2(a.x,a.y),new THREE.Vector2(b.x,b.y),new THREE.Vector2(c.x,c.y)])},updateFace:function(a,b,c){this.geom.faceVertexUvs[0].push([new THREE.Vector2(a.x,a.y),new THREE.Vector2(b.x,b.y),new THREE.Vector2(c.x,c.y)])},pushQuad:function(a,b){this.pushFace(this.vertexTable[a+","+b],this.vertexTable[a+1+","+b],this.vertexTable[a+","+(b+1)]);this.pushFace(this.vertexTable[a+
","+(b+1)],this.vertexTable[a+1+","+b],this.vertexTable[a+1+","+(b+1)])},updateQuad:function(a,b){this.updateFace(this.vertexTable[a+","+b],this.vertexTable[a+1+","+b],this.vertexTable[a+","+(b+1)]);this.updateFace(this.vertexTable[a+","+(b+1)],this.vertexTable[a+1+","+b],this.vertexTable[a+1+","+(b+1)])},pushAllQuads:function(){for(var a=0;a<this.cols-1;a++)for(var b=0;b<this.rows-1;b++)this.pushQuad(a,b)},updateAllQuads:function(){this.geom.faceVertexUvs=[[]];for(var a=0;a<this.cols-1;a++)for(var b=
0;b<this.rows-1;b++)this.updateQuad(a,b);this.geom.uvsNeedUpdate=!0},updateGeom:function(a){this.initIndex();this.generateArray();this.getUnifiedCoordinateArray();this.updateAllQuads();a&&this.geom.faceVertexUvs[0].map(function(a){a.map(function(a){a.set(a.y,a.x)})});this.geom.computeFaceNormals();this.geom.computeVertexNormals();this.geom.normalsNeedUpdate=!0},generateGeom:function(a){this.initIndex();this.generateArray();this.getUnifiedCoordinateArray();this.pushVertices();this.pushAllQuads();a&&
this.geom.faceVertexUvs[0].map(function(a){a.map(function(a){a.set(a.y,a.x)})});this.geom.computeFaceNormals();this.geom.computeVertexNormals();this.geom.normalsNeedUpdate=!0},output:function(){s="";last=this.cols-1+","+(this.rows-1);for(var a=0;a<this.cols;a++){for(var b=0;b<this.rows;b++)s+=(0==b?"":" ")+"["+a+","+b+"] ",s+=this.vertexTable[a+","+b].i+" "+Array((this.vertexTable[last].i+"").length-(this.vertexTable[a+","+b].i+"").length+1).join(" "),s+=this.vertexTable[a+","+b].x.toFixed(3)+" "+
this.vertexTable[a+","+b].y.toFixed(3);s+="\n"}console.log(s)}};Tautology.NURBSSurface=function(a,b,c,d,e){this.degree1=a;this.degree2=b;this.knots1=c;this.knots2=d;this.ctrlPoints=[];a=c.length-a-1;b=d.length-b-1;for(d=0;d<a;++d)for(this.ctrlPoints.push([]),c=0;c<b;++c)this.ctrlPoints[d][c]=e[d][c].clone()};
Tautology.NURBSSurface.prototype={constructor:Tautology.NURBSSurface,getPoint:function(a,b){return Tautology.NURBSUtils.calcSurfacePoint(this.degree1,this.degree2,this.knots1,this.knots2,this.ctrlPoints,this.knots1[0]+a*(this.knots1[this.knots1.length-1]-this.knots1[0]),this.knots2[0]+b*(this.knots2[this.knots2.length-1]-this.knots2[0]))}};Tautology.NURBSCurve=function(a,b,c){this.degree=a;this.knots=b;this.controlPoints=[];for(a=0;a<c.length;++a)b=c[a],this.controlPoints[a]=new THREE.Vector4(b.x,b.y,b.z,b.w)};Tautology.NURBSCurve.prototype=Object.create(THREE.Curve.prototype);
Tautology.NURBSCurve.prototype.getPoint=function(a){a=Tautology.NURBSUtils.calcBSplinePoint(this.degree,this.knots,this.controlPoints,this.knots[0]+a*(this.knots[this.knots.length-1]-this.knots[0]));1!=a.w&&a.divideScalar(a.w);return new THREE.Vector3(a.x,a.y,a.z)};Tautology.NURBSCurve.prototype.getTangent=function(a){a=Tautology.NURBSUtils.calcNURBSDerivatives(this.degree,this.knots,this.controlPoints,this.knots[0]+a*(this.knots[this.knots.length-1]-this.knots[0]),1)[1].clone();a.normalize();return a};Tautology.NURBSUtils={findSpan:function(a,b,c){var d=c.length-a-1;if(b>=c[d])return d-1;if(b<=c[a])return a;for(var e=Math.floor((a+d)/2);b<c[e]||b>=c[e+1];)b<c[e]?d=e:a=e,e=Math.floor((a+d)/2);return e},calcBasisFunctions:function(a,b,c,d){for(var e=[],g=[],f=[],l=e[0]=1;l<=c;++l){g[l]=b-d[a+1-l];f[l]=d[a+l]-b;for(var k=0,h=0;h<l;++h){var p=f[h+1],q=g[l-h],m=e[h]/(p+q);e[h]=k+p*m;k=q*m}e[l]=k}return e},calcBSplinePoint:function(a,b,c,d){var e=this.findSpan(a,d,b);b=this.calcBasisFunctions(e,d,a,
b);d=new THREE.Vector4(0,0,0,0);for(var g=0;g<=a;++g){var f=c[e-a+g],l=b[g],k=f.w*l;d.x+=f.x*k;d.y+=f.y*k;d.z+=f.z*k;d.w+=f.w*l}return d},calcBasisFunctionDerivatives:function(a,b,c,d,e){for(var g=[],f=0;f<=c;++f)g[f]=0;for(var l=[],f=0;f<=d;++f)l[f]=g.slice(0);for(var k=[],f=0;f<=c;++f)k[f]=g.slice(0);k[0][0]=1;for(var h=g.slice(0),p=g.slice(0),f=1;f<=c;++f){h[f]=b-e[a+1-f];p[f]=e[a+f]-b;for(var q=0,m=0;m<f;++m){var r=p[m+1],t=h[f-m];k[f][m]=r+t;var u=k[m][f-1]/k[f][m];k[m][f]=q+r*u;q=t*u}k[f][f]=
q}for(f=0;f<=c;++f)l[0][f]=k[f][c];for(m=0;m<=c;++m){a=0;b=1;e=[];for(f=0;f<=c;++f)e[f]=g.slice(0);for(h=e[0][0]=1;h<=d;++h){p=0;q=m-h;r=c-h;m>=h&&(e[b][0]=e[a][0]/k[r+1][q],p=e[b][0]*k[q][r]);t=m-1<=r?h-1:c-m;for(f=-1<=q?1:-q;f<=t;++f)e[b][f]=(e[a][f]-e[a][f-1])/k[r+1][q+f],p+=e[b][f]*k[q+f][r];m<=r&&(e[b][h]=-e[a][h-1]/k[r+1][m],p+=e[b][h]*k[m][r]);l[h][m]=p;f=a;a=b;b=f}}m=c;for(h=1;h<=d;++h){for(f=0;f<=c;++f)l[h][f]*=m;m*=c-h}return l},calcBSplineDerivatives:function(a,b,c,d,e){var g=e<a?e:a,f=
[],l=this.findSpan(a,d,b);b=this.calcBasisFunctionDerivatives(l,d,a,g,b);d=[];for(var k=0;k<c.length;++k){var h=c[k].clone(),p=h.w;h.x*=p;h.y*=p;h.z*=p;d[k]=h}for(c=0;c<=g;++c){h=d[l-a].clone().multiplyScalar(b[c][0]);for(k=1;k<=a;++k)h.add(d[l-a+k].clone().multiplyScalar(b[c][k]));f[c]=h}for(c=g+1;c<=e+1;++c)f[c]=new THREE.Vector4(0,0,0);return f},calcKoverI:function(a,b){for(var c=1,d=2;d<=a;++d)c*=d;for(var e=1,d=2;d<=b;++d)e*=d;for(d=2;d<=a-b;++d)e*=d;return c/e},calcRationalCurveDerivatives:function(a){for(var b=
a.length,c=[],d=[],e=0;e<b;++e){var g=a[e];c[e]=new THREE.Vector3(g.x,g.y,g.z);d[e]=g.w}a=[];for(g=0;g<b;++g){for(var f=c[g].clone(),e=1;e<=g;++e)f.sub(a[g-e].clone().multiplyScalar(this.calcKoverI(g,e)*d[e]));a[g]=f.divideScalar(d[0])}return a},calcNURBSDerivatives:function(a,b,c,d,e){a=this.calcBSplineDerivatives(a,b,c,d,e);return this.calcRationalCurveDerivatives(a)},calcSurfacePoint:function(a,b,c,d,e,g,f){var l=this.findSpan(a,g,c),k=this.findSpan(b,f,d);c=this.calcBasisFunctions(l,g,a,c);d=
this.calcBasisFunctions(k,f,b,d);f=[];for(g=0;g<=b;++g){f[g]=new THREE.Vector4(0,0,0,0);for(var h=0;h<=a;++h){var p=e[l-a+h][k-b+g].clone(),q=p.w;p.x*=q;p.y*=q;p.z*=q;f[g].add(p.multiplyScalar(c[h]))}}a=new THREE.Vector4(0,0,0,0);for(g=0;g<=b;++g)a.add(f[g].multiplyScalar(d[g]));a.divideScalar(a.w);return new THREE.Vector3(a.x,a.y,a.z)}};Tautology.StraightStraw=function(a,b,c){this.resolution=40;this.radius=void 0==c&&2.5||c;this.length=void 0==b&&50||b;this.vertices=new Tautology.Array;this.geom=new Tautology.MeshGeometry;this.pack=new THREE.Object3D;this.scene=a};
Tautology.StraightStraw.prototype={constructor:Tautology.StraightStraw,init:function(a){this.vertices.init([new THREE.Vector3(0,0,0)]);this.vertices.dup(this.resolution+1);this.vertices.flatten();this.vertices.dup(2);this.geom.init(this.vertices,0,1,0,1);this.updateVertices();this.geom.generateGeom(!0);this.pack.add(new THREE.Mesh(this.geom.geom,a["outside-mapped"]));this.pack.add(new THREE.Mesh(this.geom.geom,a["inside-mapped"]))},addModel:function(){this.scene.add(this.pack)},removeModel:function(){this.scene.remove(this.pack)},
updateVertices:function(){_this=this;this.geom.geom.verticesNeedUpdate=!0;this.vertices.applyFunc(function(){this.object.set(0,0,0);0==this.index.index[0]&&this.object.add(new THREE.Vector3(_this.length/2,0,0));1==this.index.index[0]&&this.object.add(new THREE.Vector3(-_this.length/2,0,0));this.object.add(new THREE.Vector3(0,0,_this.radius));this.object.applyAxisAngle(new THREE.Vector3(1,0,0),2*Math.PI*this.index.index[1]/_this.resolution)})},updateLength:function(a){this.length=a;this.updateVertices()},
updateRadius:function(a){this.radius=a;this.updateVertices()}};Tautology.BentStraw=function(a,b,c,d){this.radiusResolution=30;this.bellowResolution=16;this.radius=void 0==d&&2.5||d;this.shortLength=void 0==b&&10||b;this.longLength=void 0==c&&40||c;this.bellowAngle=.33*Math.PI;this.bellowRadius=5+(Math.PI-this.bellowAngle)/Math.PI*3;this.bellowOffset=new THREE.Vector3(-.15,0,.6);this.vertices=new Tautology.Array;this.geom=new Tautology.MeshGeometry;this.pack=new THREE.Object3D;this.scene=a};
Tautology.BentStraw.prototype={constructor:Tautology.BentStraw,init:function(a){this.vertices=new Tautology.Array;this.vertices.init([new THREE.Vector3(0,0,0)]);this.vertices.dup(this.radiusResolution+1);this.vertices.flatten();this.vertices.dup(2*this.bellowResolution+1);this.geom.init(this.vertices,0,1,0,1);this.updateVertices();this.geom.generateGeom(!0);this.pack.add(new THREE.Mesh(this.geom.geom,a["outside-mapped"]));this.pack.add(new THREE.Mesh(this.geom.geom,a["inside-mapped"]))},addModel:function(){this.scene.add(this.pack)},
removeModel:function(){this.scene.remove(this.pack)},updateRadius:function(a){this.radius=a;this.updateVertices()},updateShortLength:function(a){this.shortLength=a;this.updateVertices()},updateLongLength:function(a){this.longLength=a;this.updateVertices()},updateCurvature:function(a){this.bellowAngle=a;this.bellowRadius=5+(Math.PI-this.bellowAngle)/Math.PI*3;this.updateVertices()},updateVertices:function(){_this=this;this.geom.geom.verticesNeedUpdate=!0;this.vertices.applyFunc(function(){this.object.set(0,
0,0);0==this.index.index[0]&&this.object.add(new THREE.Vector3(_this.shortLength,0,0));this.index.index[0]==2*_this.bellowResolution&&this.object.add(new THREE.Vector3(-_this.longLength,0,0));this.object.add(new THREE.Vector3(0,0,_this.radius));1<this.index.index[0]&&this.index.index[0]<2*_this.bellowResolution&&0==(this.index.index[0]&1)&&this.object.add(_this.bellowOffset);this.object.applyAxisAngle(new THREE.Vector3(1,0,0),2*Math.PI*this.index.index[1]/_this.radiusResolution)});this.geom.updateGeom(!0);
this.vertices.applyFunc(function(){this.object.add(new THREE.Vector3(0,_this.bellowRadius,0));with({index:this.index.index})1<index[0]&&index[0]<2*_this.bellowResolution&&this.object.applyAxisAngle(new THREE.Vector3(0,0,1),_this.bellowAngle*index[0]/(2*_this.bellowResolution)),index[0]==2*_this.bellowResolution&&this.object.applyAxisAngle(new THREE.Vector3(0,0,1),_this.bellowAngle*index[0]/(2*_this.bellowResolution))});this.geom.geom.computeFaceNormals();this.geom.geom.computeVertexNormals()}};Tautology.SpoonStraw=function(a,b,c){this._resolution=40;this.radius=void 0==c&&2.5||c;this.length=void 0==b&&50||b;this.vertices=new Tautology.Array;this.jointVertices=this.spoonVertices=null;this.strawGeom=new Tautology.MeshGeometry;this.jointGeom=this.spoonGeom=null;this.pack=new THREE.Object3D;this.scene=a};Tautology.SpoonStraw.prototype.constructor=Tautology.SpoonStraw;
Tautology.SpoonStraw.prototype.init=function(a){this.vertices.init([new THREE.Vector3(0,0,0)]);this.vertices.dup(this._resolution+1);this.vertices.flatten();this.vertices.dup(2);this.strawGeom.init(this.vertices,0,1,0,1);this.updateVertices();this.strawGeom.generateGeom(!0);this.createSpoonGeom();this.updateSpoonGeom();new THREE.MeshLambertMaterial({color:16777215,opacity:.6,transparent:!0,side:THREE.FrontSide});new THREE.MeshLambertMaterial({color:16777215,opacity:.6,transparent:!0,side:THREE.BackSide});
this.pack.add(new THREE.Mesh(this.strawGeom.geom,a["outside-mapped"]));this.pack.add(new THREE.Mesh(this.jointGeom,a.outside));this.pack.add(new THREE.Mesh(this.spoonGeom,a.outside));this.pack.add(new THREE.Mesh(this.strawGeom.geom,a["inside-mapped"]));this.pack.add(new THREE.Mesh(this.jointGeom,a.inside));this.pack.add(new THREE.Mesh(this.spoonGeom,a.inside))};
Tautology.SpoonStraw.prototype.createSpoonGeom=function(){var a=function(a,b,e){var g={};g.body=[[[1,0,0,1],[1,-1,0,Math.sqrt(.5)],[0,-1,0,1],[-1,-1,0,Math.sqrt(.5)],[-1,0,0,1]],[[1,1,2,1],[1,-1,2,1],[0,-1,2,1],[-1,-1,2,1],[-1,1,2,1]],[[b,0,e+2,1],[1,-1,e,1],[0,-1,e,1],[-1,-1,e,1],[-b,0,e+2,1]],[[.3,-1,e+2,1],[0,-1,e+2,1],[0,-1,e+2,1],[0,-1,e+2,1],[-.3,-1,e+2,1]]];g.body=g.body.map(function(b){return b.map(function(b){var d=new THREE.Vector4;d.fromArray(b);d.multiplyScalar(a);d.w/=a;return d})});
return g}(this.radius,4,5).body,b=new Tautology.NURBSSurface(3,2,[0,0,0,0,1,1,1,1],[0,0,0,1,1,2,2,2],a);this.spoonGeom=new THREE.ParametricGeometry(function(a,d){return b.getPoint(a,d)},20,20);this.jointGeom=new THREE.ParametricGeometry(function(a,b){var e=new THREE.Vector3(Math.sin((1-a)*Math.PI*2),Math.cos((1-a)*Math.PI*2),b*(.25>=a||.75<=a?1-Math.cos(a*Math.PI*2):1));e.multiplyScalar(this.radius);return e}.bind(this),40,1);this.spoonGeom.applyMatrix((new THREE.Matrix4).makeTranslation(0,0,this.radius));
this.spoonGeom.applyMatrix((new THREE.Matrix4).makeRotationY(Math.PI/2));this.jointGeom.applyMatrix((new THREE.Matrix4).makeRotationY(Math.PI/2));this.spoonGeom.computeFaceNormals();this.jointGeom.computeFaceNormals();this.spoonGeom.computeVertexNormals();this.jointGeom.computeVertexNormals();this.spoonVertices=this.spoonGeom.vertices.map(function(a){return a.clone()});this.jointVertices=this.jointGeom.vertices.map(function(a){return a.clone()})};Tautology.SpoonStraw.prototype.addModel=function(){this.scene.add(this.pack)};
Tautology.SpoonStraw.prototype.removeModel=function(){this.scene.remove(this.pack)};
Tautology.SpoonStraw.prototype.updateVertices=function(){_this=this;null!=this.strawGeom.geom&&(this.strawGeom.geom.verticesNeedUpdate=!0);this.vertices.applyFunc(function(){this.object.set(0,0,0);0==this.index.index[0]&&this.object.add(new THREE.Vector3(_this.length/2,0,0));1==this.index.index[0]&&this.object.add(new THREE.Vector3(-_this.length/2,0,0));this.object.add(new THREE.Vector3(0,_this.radius,0));this.object.applyAxisAngle(new THREE.Vector3(1,0,0),2*Math.PI*this.index.index[1]/_this._resolution)})};
Tautology.SpoonStraw.prototype.updateSpoonGeom=function(){for(i=0;i<this.spoonVertices.length;i++)this.spoonGeom.verticesNeedUpdate=!0,this.spoonGeom.vertices[i].copy(this.spoonVertices[i]),this.spoonGeom.vertices[i].multiplyScalar(this.radius/2.5),this.spoonGeom.vertices[i].add(new THREE.Vector3(this.length/2,0,0));for(i=0;i<this.jointVertices.length;i++)this.jointGeom.verticesNeedUpdate=!0,this.jointGeom.vertices[i].copy(this.jointVertices[i]),this.jointGeom.vertices[i].multiplyScalar(this.radius/
2.5),this.jointGeom.vertices[i].add(new THREE.Vector3(this.length/2,0,0))};Tautology.SpoonStraw.prototype.updateLength=function(a){this.length=a;console.log("called");this.updateVertices();this.updateSpoonGeom()};Tautology.SpoonStraw.prototype.updateRadius=function(a){this.radius=a;this.updateVertices();this.updateSpoonGeom()};Tautology.StraightStrawEditor=function(a,b){this.lengthControl=a;this.radiusControl=b;this.model};
Tautology.StraightStrawEditor.prototype={constructor:Tautology.StraightStrawEditor,init:function(a,b,c){this.model=new Tautology.StraightStraw(a,this.lengthControl.val()/10,this.radiusControl.val()/10);this.model.init(b);this.radiusControl.on("input change",function(a){this.model.updateRadius(a.target.valueAsNumber/10);c.resize(20*this.model.length,a.target.valueAsNumber/10*Math.PI*40)}.bind(this));this.lengthControl.on("input change",function(a){this.model.updateLength(a.target.valueAsNumber/10);
c.resize(a.target.valueAsNumber/10*20,this.model.radius*Math.PI*40)}.bind(this))},show:function(){this.model.addModel()},hide:function(){this.model.removeModel()},resize:function(a){a.resize(20*this.model.length,this.model.radius*Math.PI*40)}};Tautology.BentStrawEditor=function(a,b,c,d){this.stubLengthControl=a;this.bodyLengthControl=b;this.radiusControl=c;this.curvatureControl=d;this.model};Tautology.BentStrawEditor.prototype.constructor=Tautology.BentStrawEditor;
Tautology.BentStrawEditor.prototype.init=function(a,b,c){this.model=new Tautology.BentStraw(a,this.stubLengthControl.val()/10,this.bodyLengthControl.val()/10,this.radiusControl.val()/10);this.model.init(b);this.radiusControl.on("input change",function(a){this.model.updateRadius(a.target.valueAsNumber/10);c.resize(20*(this.model.shortLength+this.model.longLength+this.model.bellowAngle*this.model.bellowRadius*2),a.target.valueAsNumber/10*Math.PI*40);this.model.geom.updateGeom(!0)}.bind(this));this.stubLengthControl.on("input change",
function(a){this.model.updateShortLength(a.target.valueAsNumber/10);c.resize(20*(a.target.valueAsNumber/10+this.model.longLength+this.model.bellowAngle*this.model.bellowRadius*2),straw.straight.radius*Math.PI*40);this.model.geom.updateGeom(!0)}.bind(this));this.bodyLengthControl.on("input change",function(a){this.model.updateLongLength(a.target.valueAsNumber/10);c.resize(20*(this.model.shortLength+a.target.valueAsNumber/10+this.model.bellowAngle*this.model.bellowRadius*2),straw.straight.radius*Math.PI*
40);this.model.geom.updateGeom(!0)}.bind(this));this.curvatureControl.on("input change",function(a){this.model.updateCurvature(a.target.valueAsNumber/100*Math.PI)}.bind(this))};Tautology.BentStrawEditor.prototype.show=function(){this.model.addModel()};Tautology.BentStrawEditor.prototype.hide=function(){this.model.removeModel()};
Tautology.BentStrawEditor.prototype.resize=function(a){a.resize(20*(this.model.shortLength+this.model.longLength+this.model.bellowAngle*this.model.bellowRadius*2),this.model.radius*Math.PI*40)};Tautology.SpoonStrawEditor=function(a,b){this.lengthControl=a;this.radiusControl=b;this.model};
Tautology.SpoonStrawEditor.prototype={constructor:Tautology.SpoonStrawEditor,init:function(a,b,c){this.model=new Tautology.SpoonStraw(a,this.lengthControl.val()/10,this.radiusControl.val()/10);this.model.init(b);this.radiusControl.on("input change",function(a){this.model.updateRadius(a.target.valueAsNumber/10);c.resize(20*this.model.length,a.target.valueAsNumber/10*Math.PI*40)}.bind(this));this.lengthControl.on("input change",function(a){this.model.updateLength(a.target.valueAsNumber/10);c.resize(a.target.valueAsNumber/
10*20,this.model.radius*Math.PI*40)}.bind(this))},show:function(){this.model.addModel()},hide:function(){this.model.removeModel()},resize:function(a){a.resize(20*this.model.length,this.model.radius*Math.PI*40)}};Tautology.StrawModelSelector=function(a,b){this.modelTabs=a;this.modelEditors=b};Tautology.StrawModelSelector.prototype={constructor:Tautology.StrawModelSelector,init:function(a,b,c){var d=Object.keys(this.modelTabs);d.map(function(e){this.modelEditors[e].init(a,b,c);this.modelTabs[e].on("shown.bs.tab",function(a){d.map(function(a){this.modelEditors[a].hide()}.bind(this));this.modelEditors[e].resize(c);this.modelEditors[e].show()}.bind(this))}.bind(this));this.modelEditors[d[0]].resize(c);this.modelEditors[d[0]].show()}};